import fire.*;

rule "When there is fire turn on Sprinkler"
when
  Fire($room : room)
  $sprinkler : Sprinkler(room == $room, on==false)
then
  modify($sprinkler){setOn(true)};
  System.out.println("Turned on sprinkler in room: "+$room.getName());
end

rule "When fire is gone turn off the sprinkler"
when
  $room : Room()
  $sprinkler : Sprinkler(room == $room, on==true)
  not Fire (room == $room)
then
  modify($sprinkler){setOn(false)};
  System.out.println("Turned off sprinkler in room: "+$room.getName());
 end

rule "Raise alarm when there is a fire"
when
  exists Fire()
then
   insert(new Alarm());
   System.out.println("Raised the alarm");
end

rule "Cancel alarm when there is no fire"
when
  not Fire()
  $alarm : Alarm()
then
   retract($alarm);
   System.out.println("Cancelled the alarm");
end

rule "Status output when things are ok"
when
 not Alarm()
 not Sprinkler(on == true)
then
  System.out.println("All is ok");
end

rule "Sprinkler puts fire out"
timer (int: 10s 0)
when
  $fire : Fire($room : room)
  $sprinkler : Sprinkler(room == $room, on==true)
then
  modify($sprinkler){setOn(false)};
  retract($fire)
  System.out.println("Fire gone: "+$room.getName());
end



